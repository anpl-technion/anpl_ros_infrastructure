<launch>
    <arg name="ns" default="turtlebot"/> <!--TODO: remove default value-->
    <arg name="robot_name"/>	
    <arg name="init_pose"/>
    <arg name="base" default="kobuki"/>
    <arg name="stacks" default="hexagons"/>
    <arg name="3d_sensor" default="asus_xtion_pro"/>

    <!-- load the robot description -->
    <arg name="model" default="$(find xacro)/xacro.py '$(find anpl_inf)/robots_description/turtlebot_description/robots/$(arg base)_$(arg stacks)_$(arg 3d_sensor).urdf.xacro'" />
    <param name="turtolebot_description" command="$(arg model)" />

   <!-- start robot state publisher -->
   <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" >
     <param name="publish_frequency" type="double" value="50.0" />
     <param name="tf_prefix" type="string" value="" />

	 <remap from="robot_description" to="turtolebot_description" />
	 <remap from="joint_states" 	 to="joint_states" />
   </node>
  
    <!-- Gazebo model spawner -->
    <node name="$(arg robot_name)_spawn_turtlebot_model" pkg="gazebo_ros" type="spawn_model"
          args="$(arg init_pose) -unpause -urdf -param turtolebot_description -model $(arg robot_name)_turtlebot"/>

  
    <!-- Velocity muxer -->
    <node pkg="nodelet" type="nodelet" name="$(arg robot_name)_mobile_base_nodelet_manager" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="$(arg robot_name)_cmd_vel_mux"
          args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
        <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml" />
        <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
    </node>

  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
	<param name="range_max" value="30.0"/>
    <remap from="image" to="/$(arg ns)/camera/depth/image_raw"/>
    <remap from="scan" to="/$(arg ns)/scan"/>
  </node>
</launch>
